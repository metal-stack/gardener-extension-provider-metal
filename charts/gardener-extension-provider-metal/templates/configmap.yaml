apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "name" . }}-configmap
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "labels" . | indent 4 }}
data:
  config.yaml: |
    ---
    apiVersion: metal.provider.extensions.config.gardener.cloud/v1alpha1
    kind: ControllerConfiguration
{{- if .Values.config.clientConnection }}
    clientConnection:
      acceptContentTypes: {{ required ".Values.config.clientConnection.acceptContentTypes is required" .Values.config.clientConnection.acceptContentTypes }}
      contentType: {{ required ".Values.config.clientConnection.contentType is required" .Values.config.clientConnection.contentType }}
      qps: {{ required ".Values.config.clientConnection.qps is required" .Values.config.clientConnection.qps }}
      burst: {{ required ".Values.config.clientConnection.burst is required" .Values.config.clientConnection.burst }}
{{- end }}
{{- if .Values.config.machineImages }}
    machineImages:
{{ toYaml .Values.config.machineImages | indent 4 }}
{{- end }}
    etcd:
      storage:
        className: {{ .Values.config.etcd.storage.className }}
        capacity: {{ .Values.config.etcd.storage.capacity }}
      backup:
        schedule: {{ .Values.config.etcd.backup.schedule }}
        deltaSnapshotPeriod: {{ .Values.config.etcd.backup.deltaSnapshotPeriod }}
    clusterAudit:
      enabled: {{ .Values.config.clusterAudit.enabled }}
    auditToSplunk:
      enabled: {{ .Values.config.auditToSplunk.enabled }}
{{- if .Values.config.auditToSplunk.enabled }}
      hecToken: {{ .Values.config.auditToSplunk.hecToken }}
      index: {{ .Values.config.auditToSplunk.index }}
      hecHost: {{ .Values.config.auditToSplunk.hecHost }}
      hecPort: {{ .Values.config.auditToSplunk.hecPort }}
      tlsEnabled: {{ .Values.config.auditToSplunk.tlsEnabled }}
      hecCAFile: |
{{ .Values.config.auditToSplunk.hecCAFile | indent 8}}
{{- end }}
    auth:
      enabled: {{ .Values.config.auth.enabled }}
{{- if .Values.config.auth.enabled }}
      providerTenant: {{ .Values.config.auth.providerTenant }}
{{- end }}
    accountingExporter:
      enabled: {{ .Values.config.accountingExporter.enabled }}
{{- if .Values.config.accountingExporter.enabled }}
      networkTraffic:
        enabled: {{ .Values.config.accountingExporter.networkTraffic.enabled }}
        internalNetworks:
{{ toYaml .Values.config.accountingExporter.networkTraffic.internalNetworks | indent 10 }}
      clientConfig:
        hostname: {{ .Values.config.accountingExporter.clientConfig.hostname }}
        port: {{ .Values.config.accountingExporter.clientConfig.port }}
        ca: |
{{ .Values.config.accountingExporter.clientConfig.ca | indent 10 }}
        cert: |
{{ .Values.config.accountingExporter.clientConfig.cert | indent 10 }}
        certKey: |
{{ .Values.config.accountingExporter.clientConfig.certkey | indent 10 }}
{{- end }}
    storage:
      duros:
        enabled: {{ .Values.config.storage.duros.enabled }}
{{- if .Values.config.storage.duros.enabled }}
        partitionConfig:
{{ toYaml .Values.config.storage.duros.partitionConfig | indent 12 }}
{{- end }}
{{- if .Values.config.imagePullSecret.encodedDockerConfigJSON }}
    imagePullSecret:
      encodedDockerConfigJSON: {{ .Values.config.imagePullSecret.encodedDockerConfigJSON }}
{{- end }}
