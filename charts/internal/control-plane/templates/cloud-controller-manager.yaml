apiVersion: v1
kind: Service
metadata:
  name: cloud-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: kubernetes
    role: cloud-controller-manager
  annotations:
    networking.resources.gardener.cloud/from-all-scrape-targets-allowed-ports: '[{"port":{{ include "cloud-controller-manager.port" . }},"protocol":"TCP"}]'
    # TODO: This label approach is deprecated and no longer needed in the future. Remove them as soon as gardener/gardener@v1.75 has been released.
    networking.resources.gardener.cloud/from-policy-pod-label-selector: all-scrape-targets
    networking.resources.gardener.cloud/from-policy-allowed-ports: '[{"port":{{ include "cloud-controller-manager.port" . }},"protocol":"TCP"}]'
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: metrics
    port: {{ include "cloud-controller-manager.port" . }}
    protocol: TCP
  selector:
    app: kubernetes
    role: cloud-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    garden.sapcloud.io/role: controlplane
    app: kubernetes
    role: cloud-controller-manager
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.cloudControllerManager.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: cloud-controller-manager
  template:
    metadata:
{{- if .Values.cloudControllerManager.podAnnotations }}
      annotations:
{{ toYaml .Values.cloudControllerManager.podAnnotations | indent 8 }}
{{- end }}
      labels:
        garden.sapcloud.io/role: controlplane
        gardener.cloud/role: controlplane
        app: kubernetes
        role: cloud-controller-manager
        networking.gardener.cloud/from-prometheus: allowed
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-shoot-apiserver: allowed
        networking.gardener.cloud/to-private-networks: "allowed"
        networking.gardener.cloud/to-public-networks: allowed
        networking.resources.gardener.cloud/to-kube-apiserver-tcp-443: "allowed"
    spec:
      tolerations:
      - effect: NoExecute
        operator: Exists
      automountServiceAccountToken: false
      containers:
      - name: cloud-controller-manager
        image: {{ index .Values.images "metalccm" }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - ./metal-cloud-controller-manager
        - --cluster-cidr={{ .Values.cloudControllerManager.podNetwork }}
        - --cluster-name={{ .Values.cloudControllerManager.clusterName }}
        - --concurrent-service-syncs=10
        {{- include "cloud-controller-manager.featureGates" . | trimSuffix "," | indent 8 }}
        - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - --leader-elect=true
        - --secure-port={{ include "cloud-controller-manager.port" . }}
        - --authentication-kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - --authorization-kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - --tls-cert-file=/var/lib/cloud-controller-manager-server/tls.crt
        - --tls-private-key-file=/var/lib/cloud-controller-manager-server/tls.key
        - --tls-cipher-suites={{ .Values.cloudControllerManager.tlsCipherSuites | join "," }}
        - --use-service-account-credentials
        - --v=2
        {{- range $index, $param := $.Values.cloudControllerManager.additionalParameters }}
        - {{ $param }}
        {{- end }}
        env:
          - name: METAL_API_URL
            value: {{ .Values.cloudControllerManager.metal.endpoint }}
          - name: METAL_AUTH_HMAC
            valueFrom:
              secretKeyRef:
                name: cloudprovider
                key: metalAPIHMac
          - name: METAL_PROJECT_ID
            value: {{ .Values.cloudControllerManager.projectID }}
          - name: METAL_PARTITION_ID
            value: {{ .Values.cloudControllerManager.partitionID }}
          - name: METAL_NETWORK_ID
            value: {{ .Values.cloudControllerManager.networkID }}
          - name: METAL_CLUSTER_ID
            value: {{ .Values.cloudControllerManager.clusterID }}
          - name: METAL_DEFAULT_EXTERNAL_NETWORK_ID
            value: {{ .Values.cloudControllerManager.defaultExternalNetwork }}
          - name: METAL_ADDITIONAL_NETWORKS
            value: {{ .Values.cloudControllerManager.additionalNetworks }}
          - name: METAL_SSH_PUBLICKEY
            value: {{ .Values.cloudControllerManager.sshPublicKey | quote }}
          - name: LOADBALANCER
            value: {{ .Values.cloudControllerManager.loadBalancer }}
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: {{ include "cloud-controller-manager.port" . }}
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- if .Values.cloudControllerManager.resources }}
        resources:
{{ toYaml .Values.cloudControllerManager.resources | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: kubeconfig
          mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          readOnly: true
        - name: cloud-controller-manager-server
          mountPath: /var/lib/cloud-controller-manager-server
        - name: cloudprovider
          mountPath: /srv/cloudprovider
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: kubeconfig
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: kubeconfig
                path: kubeconfig
              name: {{ .Values.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
              - key: token
                path: token
              name: shoot-access-cloud-controller-manager
              optional: false
      - name: cloud-controller-manager-server
        secret:
          secretName: {{ .Values.cloudControllerManager.secrets.server }}
      - name: cloudprovider
        secret:
          secretName: cloudprovider
