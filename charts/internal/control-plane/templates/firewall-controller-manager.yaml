---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: firewall-controller-manager
  namespace: {{ .Release.Namespace }}
automountServiceAccountToken: false
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: firewall-controller-manager
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - metal-stack.io/v2
  resources:
  - firewalls
  - firewallsets
  - firewalldeployments
  - firewalls/status
  - firewallsets/status
  - firewalldeployments/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  - events
  verbs:
  - get
  - watch
  - update
  - patch
  - create
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: firewall-controller-manager
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: firewall-controller-manager
subjects:
- kind: ServiceAccount
  name: firewall-controller-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firewall-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: firewall-controller-manager
spec:
  selector:
    matchLabels:
      app: firewall-controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        app: firewall-controller-manager
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      automountServiceAccountToken: false
      serviceAccountName: firewall-controller-manager
      containers:
      - name: firewall-controller-manager
        args:
          - -cert-dir=/certs
          - -cluster-api-url={{ .Values.firewallControllerManager.apiServerURL }}
          - -cluster-id={{ .Values.firewallControllerManager.clusterID }}
          - -enable-leader-election
          - -metal-api-url={{ .Values.firewallControllerManager.metalapi.url }}
          - -namespace={{ .Release.Namespace }}
          - -shoot-kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        env:
          - name: METAL_AUTH_HMAC
            value:
        image: {{ index .Values.images "firewall-controller-manager" }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 400m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
          - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
            name: kubeconfig
            readOnly: true
      volumes:
        - name: kubeconfig
          projected:
            defaultMode: 420
            sources:
            - secret:
                items:
                  - key: kubeconfig
                    path: kubeconfig
                name: {{ .Values.genericTokenKubeconfigSecretName }}
                optional: false
            - secret:
                items:
                  - key: token
                    path: token
                name: shoot-access-firewall-controller-manager
                optional: false
