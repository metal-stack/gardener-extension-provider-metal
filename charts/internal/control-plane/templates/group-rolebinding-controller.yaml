{{- if .Values.groupRolebindingController.enabled }}
{{- if .Values.imagePullSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: group-rolebinding-controller-registry-credentials
  name: group-rolebinding-controller-registry-credentials
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ .Values.imagePullSecret }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: group-rolebinding-controller
{{- if .Values.podAnnotations }}
  annotations:
{{ toYaml .Values.podAnnotations | indent 4 }}
{{- end }}
  name: group-rolebinding-controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.groupRolebindingController.replicas }}
  selector:
    matchLabels:
      app: group-rolebinding-controller
  template:
    metadata:
      labels:
        app: group-rolebinding-controller
        networking.gardener.cloud/from-prometheus: allowed
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-shoot-apiserver: allowed
        networking.gardener.cloud/to-public-networks: allowed
    spec:
{{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: group-rolebinding-controller-registry-credentials
{{- end }}
      automountServiceAccountToken: false
      containers:
      - name: group-rolebinding-controller
        image: {{ index .Values.images "group-rolebinding-controller" }}
        imagePullPolicy: Always
        command: ["/group-rolebinding-controller"]
        args:
        - --excludeNamespaces=kube-system,kube-public,kube-node-lease,default
        - --expectedGroupsList=admin,edit,view
        - --clustername={{ .Values.groupRolebindingController.clusterName }}
        - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        volumeMounts:
        - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          name: kubeconfig
          readOnly: true
      volumes:
      - name: kubeconfig
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
                - key: kubeconfig
                  path: kubeconfig
              name: {{ .Values.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
                - key: token
                  path: token
              name: shoot-access-group-rolebinding-controller
              optional: false
{{- end }}
