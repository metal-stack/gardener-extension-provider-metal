---
kubernetesVersion: 1.7.5
featureGates: {}
podAnnotations: {}

images:
  metalccm: image-repository:image-tag
  authn-webhook: image-repository:image-tag
  group-rolebinding-controller: image-repository:image-tag
  accounting-exporter: image-repository:image-tag
  duros-controller: image-repository:image-tag
  firewall-controller-manager: image-repository:image-tag

firewallControllerManager:
  replicas: 1
  clusterID: cluster-id
  apiServerURL: address-to-the-shoot-apiserver
  metalapi:
    url: https://metal-api
    hmac: ABC123

cloudControllerManager:
  additionalParameters: []
  podAnnotations: {}
  replicas: 1
  podNetwork: 192.168.0.0/16
  projectID: project-id
  partitionID: partition-id
  networkID: network-id
  clusterID: cluster-id
  defaultExternalNetwork: external-network-id
  additionalNetworks: internet,mpls
  metal:
    endpoint: api-url
  secrets:
    server: cloud-controller-manager-server
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 250m
      memory: 300Mi

groupRolebindingController:
  enabled: false
  replicas: 1
  clusterName: cluster-name

authnWebhook:
  replicas: 1
  metalapi:
    url: https://metal-api
    hmac: ABC123
    hmac_auth_type: Metal-View
    apitoken: ey123
  secrets:
    server: kube-jwt-authn-webhook-server
  enabled: false
  port: 443
  debug: false
  tenant: some-tenant
  providerTenant: provider-tenant
  clusterName: cluster-name
  oidc:
    issuerUrl: https://tokenissuer/dex
    issuerClientId: myClientId

limitValidatingWebhook:
  enabled: false

accountingExporter:
  enabled: false
  replicas: 1
  enrichments:
    projectID: project-id
    projectName: project-name
    partitionID: partition-id
    tenant: some-tenant
    clusterID: cluster-id
    clusterName: cluster-name
  networkTraffic:
    enabled: false
  accountingAPI:
    hostname: hostname
    port: 9000
    ca: |
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    cert: |
      -----BEGIN CERTIFICATE-----
      ...
      -----END CERTIFICATE-----
    certKey: |
      -----BEGIN RSA PRIVATE KEY-----
      ...
      -----END RSA PRIVATE KEY-----

duros:
  enabled: false
  replicas: 1
  storageClasses: []
  projectID: project-id
  controller:
    endpoints:
    - ip:port
    - ip:port
    - ip:port
    adminKey: KEY
    adminToken: tok
    apiEndpoint:
    apiCA:
    apiKey:
    apiCert:

imagePullSecret:

genericTokenKubeconfigSecretName: generic-token-kubeconfig
