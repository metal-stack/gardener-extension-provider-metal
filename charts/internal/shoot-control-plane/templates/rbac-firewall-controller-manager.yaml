---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:firewall-controller-manager
rules:
- apiGroups:
  - firewall.metal-stack.io
  resources:
  - firewallmonitors
  - firewallmonitors/status
  verbs:
  - list
  - get
  - update
  - patch
  - create
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - get
  - watch
  - update
  - patch
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - create
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - create
# the following permissions are used by the firewall-controller, it uses the same client / service account
# for shoot-access as the firewall-controller-manager.
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  - services
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["*"]
- apiGroups:
  - apiextensions.k8s.io
  - ""
  resources:
  - customresourcedefinitions
  - services
  - endpoints
  verbs:
  - get
  - create
  - update
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metal-stack.io
  resources:
  - clusterwidenetworkpolicies
  - clusterwidenetworkpolicies/status
  verbs:
  - list
  - get
  - update
  - patch
  - create
  - delete
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:firewall-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:firewall-controller-manager
subjects:
- kind: ServiceAccount
  name: firewall-controller-manager
  namespace: kube-system
