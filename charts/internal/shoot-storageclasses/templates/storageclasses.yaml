---
apiVersion: v1
kind: Namespace
metadata:
  name: csi-lvm
---
apiVersion: {{ include "storageclassversion" . }}
kind: StorageClass
metadata:
  name: csi-lvm
  annotations:
{{ if .Values.isDefaultStorageClass }}
    storageclass.kubernetes.io/is-default-class: "true"
{{ end }}
provisioner: metal-stack.io/csi-lvm
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-lvm-controller
  namespace: csi-lvm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-lvm-controller
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - persistentvolumes
  - pods
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resourceNames:
  - gardener.privileged
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-lvm-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-lvm-controller
subjects:
- kind: ServiceAccount
  name: csi-lvm-controller
  namespace: csi-lvm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-lvm-controller
  namespace: csi-lvm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-lvm-controller
  template:
    metadata:
      labels:
        app: csi-lvm-controller
    spec:
      serviceAccountName: csi-lvm-controller
      containers:
      - name: csi-lvm-controller
        image: {{ index .Values.images "csi-lvm-controller" }}
        imagePullPolicy: Always
        command:
        - /csi-lvm-controller
        args:
        - start
        env:
        - name: CSI_LVM_PROVISIONER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CSI_LVM_PULL_POLICY
          value: "IfNotPresent"
        - name: CSI_LVM_PROVISIONER_IMAGE
          value: {{ index .Values.images "csi-lvm-provisioner" }}
        - name: CSI_LVM_DEVICE_PATTERN
          # IMPORTANT: you cannot specify a wildcard (*) at any position in the devices grok.
          value: "/dev/nvme[0-1]n[0-9]"
        resources:
          limits:
            cpu: 20m
            memory: "128Mi"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-lvm-reviver
  namespace: csi-lvm
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: csi-lvm-reviver-psp
  namespace: csi-lvm
spec:
  allowPrivilegeEscalation: true
  privileged: true
  fsGroup:
    rule: RunAsAny
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: csi-lvm-reviver-psp
  namespace: csi-lvm
rules:
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - csi-lvm-reviver-psp
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: csi-lvm-reviver
  namespace: csi-lvm
rules:
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: csi-lvm-reviver-psp
  namespace: csi-lvm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: csi-lvm-reviver-psp
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: csi-lvm-reviver
  namespace: csi-lvm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: csi-lvm-reviver
  namespace: csi-lvm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: csi-lvm-reviver
subjects:
- kind: ServiceAccount
  name: csi-lvm-reviver
  namespace: csi-lvm
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-lvm-reviver
  namespace: csi-lvm
spec:
  selector:
    matchLabels:
      app: csi-lvm-reviver
  template:
    metadata:
      labels:
        app: csi-lvm-reviver
    spec:
      serviceAccountName: csi-lvm-reviver
      containers:
      - name: csi-lvm-reviver
        image: {{ index .Values.images "csi-lvm-provisioner" }}
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
          - name: CSI_LVM_MOUNTPOINT
            value: "/tmp/csi-lvm"
        command:
        - /csi-lvm-provisioner
        args:
        - revivelvs
        volumeMounts:
          - mountPath: /tmp/csi-lvm
            name: data
            mountPropagation: Bidirectional
          - mountPath: /dev
            name: devices
          - mountPath: /lib/modules
            name: modules
          - mountPath: /etc/lvm/backup
            name: lvmbackup
            mountPropagation: Bidirectional
          - mountPath: /etc/lvm/cache
            name: lvmcache
            mountPropagation: Bidirectional
          - mountPath: /run/lock/lvm
            name: lvmlock
            mountPropagation: Bidirectional
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
        - hostPath:
            path: /tmp/csi-lvm
            type: DirectoryOrCreate
          name: data
        - hostPath:
            path: /dev
            type: DirectoryOrCreate
          name: devices
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: modules
        - hostPath:
            path: /etc/lvm/backup
            type: DirectoryOrCreate
          name: lvmbackup
        - hostPath:
            path: /etc/lvm/cache
            type: DirectoryOrCreate
          name: lvmcache
        - hostPath:
            path: /run/lock/lvm
            type: DirectoryOrCreate
          name: lvmlock
