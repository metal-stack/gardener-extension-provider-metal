package controlplane

import (
	"encoding/base64"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/stretchr/testify/require"
)

func TestAdditionalContainerdConfigFiles(t *testing.T) {
	tests := []struct {
		name     string
		endpoint string
		mirrors  []string
		want     []struct {
			path    string
			content string
		}
	}{
		{
			"network access forbidden overrides",
			"https://r.metal-stack.dev",
			[]string{
				"docker.lightbitslabs.com",
				"quay.io",
				"eu.gcr.io",
				"ghcr.io",
				"registry.k8s.io",
				"r.metal-stack.io",
			},
			[]struct {
				path    string
				content string
			}{
				{

					"/etc/containerd/config.toml",
					`# Generated by gardener-extension-provider-metal
version = 2

[plugins."io.containerd.grpc.v1.cri".registry]
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.lightbitslabs.com"]
      endpoint = ["https://r.metal-stack.dev"]
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."quay.io"]
      endpoint = ["https://r.metal-stack.dev"]
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."eu.gcr.io"]
      endpoint = ["https://r.metal-stack.dev"]
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."ghcr.io"]
      endpoint = ["https://r.metal-stack.dev"]
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."registry.k8s.io"]
      endpoint = ["https://r.metal-stack.dev"]
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."r.metal-stack.io"]
      endpoint = ["https://r.metal-stack.dev"]
`},
			},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got := additionalContainterdConfigFiles(tt.endpoint, tt.mirrors)
			if len(got) != len(tt.want) {
				t.Errorf("different amount of files generated, want %d, got %d", len(tt.want), len(got))
			}
			for i, w := range tt.want {
				g := got[i]
				if diff := cmp.Diff(w.path, g.Path); diff != "" {
					t.Errorf("path diff (+got -want):\n %s", diff)
				}
				gotData, err := base64.StdEncoding.DecodeString(g.Content.Inline.Data)
				require.NoError(t, err)
				gotContent := string(gotData)

				if diff := cmp.Diff(w.content, gotContent); diff != "" {
					t.Errorf("diff (+got -want):\n %s", diff)
				}
			}
		})
	}
}
